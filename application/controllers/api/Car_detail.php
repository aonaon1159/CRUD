<?php 
/*
    Generated by Manuigniter v2.0 
    www.manuigniter.com
*/
use Restserver\Libraries\REST_Controller;
defined('BASEPATH') OR exit('No direct script access allowed');
require APPPATH . '/libraries/REST_Controller.php';
require APPPATH . 'libraries/Format.php';
class Car_detail extends REST_Controller{
 function __construct()
 {
       parent::__construct();
      $this->load->model('Car_detail_model');
 } 
 /*
* Listing of car_detail
 */
public function get_all_post()
{
  try{
  $data['car_detail'] = $this->Car_detail_model->get_all_car_detail();
     if($data['car_detail'] && $data['car_detail']!=null){
       $car_detail_ar = array();
       foreach($data['car_detail'] as $c)
       {
       $c_ar = array();
       $c_ar['type_id'] = $c['type_id'];
       $c_ar['brand_id'] = $c['brand_id'];
       $c_ar['ver_id'] = $c['ver_id'];
       $c_ar['car_name'] = $c['car_name'];
       $c_ar['car_image'] = $c['car_image'];
       $c_ar['car_detail'] = $c['car_detail'];
       $c_ar['car_price'] = $c['car_price'];
       $c_ar['created_by'] = $c['created_by'];
       $c_ar['update_at'] = $c['update_at'];
       $c_ar['created_date'] = $c['created_date'];
       $car_detail_ar[] = $c_ar;
       }
       $response = array(
       'status' => 200,
       'message' => 'get all data Succesfully',
       'data' => $car_detail_ar,
       );
       $this->response($response, REST_Controller::HTTP_OK);
     }
     else{
       $response = array(
      'status' => 400,
      'message' => 'Detail is not found'
        );
       $this->response($response, REST_Controller::HTTP_OK); 
        }
       } catch (Exception $ex) {
             throw new Exception('Car_detail controller_name : Error in get_all_post function - ' . $ex);
        }  
}
 /*
  * Adding a new car_detail
  */
 function addnew_post()
 {  
  try{
      $params = array(
       'type_id'=> $this->input->post('type_id'),
       'brand_id'=> $this->input->post('brand_id'),
       'ver_id'=> $this->input->post('ver_id'),
       'car_name'=> $this->input->post('car_name'),
       'car_detail'=> $this->input->post('car_detail'),
       'car_price'=> $this->input->post('car_price'),
       'created_by'=> $this->input->post('created_by'),
       'update_at'=> $this->input->post('update_at'),
       'created_date'=> $this->input->post('created_date'),
        );
       $this->load->library('upload');
       $this->load->library('form_validation');
        $foldername='car_image';
        $fileuploaddire='./resource/'.$foldername;
        $directory=base_url('resource/').$foldername;
        if (!is_dir($fileuploaddire)) {
         mkdir($fileuploaddire, 0777, true);
        }
        $car_image="";
        if (!empty($_FILES['car_image']['name']))
        { 
            $filename =time().$_FILES['car_image']['name'];
            $car_image = str_replace(' ','_',$filename);
            $config['file_name'] = $car_image; 
            $config['upload_path']=$fileuploaddire;
            $config['allowed_types']='pdf|doc|docx|docs|jpg|jpeg|png ';
             $config['max_length']='100000';
            $this->upload->initialize($config);
            if(!$this->upload->do_upload('car_image'))
            {
                $error =$this->upload->display_errors();
                                                    // print_r($error);
                $msg='File Can not Upload ..Please upload pdf |doc |docs|jpg|jpeg|png  type only and Maximum file size 25MB '.$error;
                $this->response(array('status' => 400, 'message' => 'somthing went wrong','image' => $error), REST_Controller::HTTP_OK);
            }
            else 
            {
            }
        }
        $params['car_image'] =$car_image;
  if(isset($_POST['type_id']) && $_POST['type_id'] == '' || !isset($_POST['type_id']))
                         $this->response(array('status' => 400,'message' => 'type_id is require'), REST_Controller::HTTP_OK);
  if(isset($_POST['brand_id']) && $_POST['brand_id'] == '' || !isset($_POST['brand_id']))
                         $this->response(array('status' => 400,'message' => 'brand_id is require'), REST_Controller::HTTP_OK);
  if(isset($_POST['ver_id']) && $_POST['ver_id'] == '' || !isset($_POST['ver_id']))
                         $this->response(array('status' => 400,'message' => 'ver_id is require'), REST_Controller::HTTP_OK);
  if(isset($_POST['car_name']) && $_POST['car_name'] == '' || !isset($_POST['car_name']))
                         $this->response(array('status' => 400,'message' => 'car_name is require'), REST_Controller::HTTP_OK);
  if(isset($_POST['car_detail']) && $_POST['car_detail'] == '' || !isset($_POST['car_detail']))
                         $this->response(array('status' => 400,'message' => 'car_detail is require'), REST_Controller::HTTP_OK);
  if(isset($_POST['car_price']) && $_POST['car_price'] == '' || !isset($_POST['car_price']))
                         $this->response(array('status' => 400,'message' => 'car_price is require'), REST_Controller::HTTP_OK);
  if(isset($_POST['created_by']) && $_POST['created_by'] == '' || !isset($_POST['created_by']))
                         $this->response(array('status' => 400,'message' => 'created_by is require'), REST_Controller::HTTP_OK);
  if(isset($_POST['update_at']) && $_POST['update_at'] == '' || !isset($_POST['update_at']))
                         $this->response(array('status' => 400,'message' => 'update_at is require'), REST_Controller::HTTP_OK);
  if(isset($_POST['created_date']) && $_POST['created_date'] == '' || !isset($_POST['created_date']))
                         $this->response(array('status' => 400,'message' => 'created_date is require'), REST_Controller::HTTP_OK);
        if($this->form_validation->run())  
        {  
            $car_id= $this->Car_detail_model->add_car_detail($params);
   $data['car_detail'] = $this->Car_detail_model->get_car_detail($car_id);
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Added',
            'data' => $data
             );
           $this->response($response, REST_Controller::HTTP_OK);
        }
        else
        { 
           $response = array(
            'status' => 400,
            'message' => 'Not Added try again',
            'data' => ''
             );
           $this->response($response, REST_Controller::HTTP_OK);
        }
       } catch (Exception $ex) {
             throw new Exception('Car_detail controller_name : Error in new car_detail function - ' . $ex);
       }  
 }  
  /*
  * Editing a car_detail
 */
  function edit_post($car_id)
 {   
  try{
   $data['car_detail'] = $this->Car_detail_model->get_car_detail($car_id);
       $this->load->library('upload');
       $this->load->library('form_validation');
     if(isset($data['car_detail']['car_id']))
      {
        $params = array(
           'type_id'=> $this->input->post('type_id'),
           'brand_id'=> $this->input->post('brand_id'),
           'ver_id'=> $this->input->post('ver_id'),
           'car_name'=> $this->input->post('car_name'),
           'car_detail'=> $this->input->post('car_detail'),
           'car_price'=> $this->input->post('car_price'),
           'created_by'=> $this->input->post('created_by'),
           'update_at'=> $this->input->post('update_at'),
           'created_date'=> $this->input->post('created_date'),
        );
      $foldername='car_image';
      $fileuploaddire='./resource/'.$foldername;
      $directory=base_url('resource/').$foldername;
      if (!is_dir($fileuploaddire)) {
         mkdir($fileuploaddire, 0777, true);
      }
      $car_image="";
      if (!empty($_FILES['car_image']['name']))
      { 
          $filename =time().$_FILES['car_image']['name'];
          $car_image = str_replace(' ','_',$filename);
          $config['file_name'] = $car_image; 
          $config['upload_path']=$fileuploaddire;
          $config['allowed_types']='pdf|doc|docx|docs|jpg|jpeg|png ';
          $config['max_length']='100000';
          $this->upload->initialize($config);
          if(!$this->upload->do_upload('car_image'))
          {
              $error =$this->upload->display_errors();
                                                    // print_r($error);
              $msg='File Can not Upload ..Please upload pdf |doc |docs|jpg|jpeg|png  type only and Maximum file size 25MB '.$error;
           $this->response(array('status' => 400,'message' => 'file required'), REST_Controller::HTTP_OK);
              }
              else 
              {
          $pathn=FCPATH.'resource/car_image/'.$data['car_detail']['car_image'];
         if(is_file($pathn))
           unlink($pathn);   
                $params['car_image'] =$car_image;
              }
       }
       else
       {
        }
           $this->response(array('status' => 400,'message' => 'type_id required'), REST_Controller::HTTP_OK);
           $this->response(array('status' => 400,'message' => 'brand_id required'), REST_Controller::HTTP_OK);
           $this->response(array('status' => 400,'message' => 'ver_id required'), REST_Controller::HTTP_OK);
           $this->response(array('status' => 400,'message' => 'car_name required'), REST_Controller::HTTP_OK);
           $this->response(array('status' => 400,'message' => 'car_image required'), REST_Controller::HTTP_OK);
           $this->response(array('status' => 400,'message' => 'car_detail required'), REST_Controller::HTTP_OK);
           $this->response(array('status' => 400,'message' => 'car_price required'), REST_Controller::HTTP_OK);
           $this->response(array('status' => 400,'message' => 'created_by required'), REST_Controller::HTTP_OK);
           $this->response(array('status' => 400,'message' => 'update_at required'), REST_Controller::HTTP_OK);
           $this->response(array('status' => 400,'message' => 'created_date required'), REST_Controller::HTTP_OK);
         if($this->form_validation->run())  
           {  
           $this->Car_detail_model->update_car_detail($car_id,$params);
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Updated',
            'data' => $car_id
             );
           $this->response($response, REST_Controller::HTTP_OK);
           }
           else
          {
           $response = array(
            'status' => 400,
            'message' => 'Not Updated Try again',
            'data' => $car_id
             );
           $this->response($response, REST_Controller::HTTP_OK);
          }
  }
       } catch (Exception $ex) {
             throw new Exception('Car_detail controller_name : Error in edit_post function - ' . $ex);
        }  
} 
/*
  * Deleting car_detail
  */
  function remove_post($car_id)
   {
  try{
      $car_detail = $this->Car_detail_model->get_car_detail($car_id);
  // check if the car_detail exists before trying to delete it
       if(isset($car_detail['car_id']))
       {
         $this->Car_detail_model->delete_car_detail($car_id);
          $pathn=FCPATH.'resource/car_image/'.$car_detail['car_image'];
         if(is_file($pathn))
           unlink($pathn);   
           $response = array(
            'status' => 200,
            'message' => 'Succesfully Removed',
            'data' => $car_id
             );
           $this->response($response, REST_Controller::HTTP_OK);
       }
       else
           $response = array(
            'status' => 400,
            'message' => 'Not Updated Try again',
            'data' => $car_id
             );
           $this->response($response, REST_Controller::HTTP_OK);
       } catch (Exception $ex) {
             throw new Exception('Car_detail controller_name : Error in remove_post function - ' . $ex);
        }  
  }
 }
